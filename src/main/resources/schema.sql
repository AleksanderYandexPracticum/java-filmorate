DROP TABLE IF EXISTS userWhoLiked;
DROP TABLE IF EXISTS friendships;
DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS film_genre;
DROP TABLE IF EXISTS films;
DROP TABLE IF EXISTS genre;
DROP TABLE IF EXISTS mpa;


Create table IF NOT EXISTS mpa
(
mpa_id int generated by default as identity primary key,
name  varchar(100) not null
);

Create table IF NOT EXISTS genre
(
genre_id int generated by default as identity primary key,
name  varchar(100) not null
);

Create table IF NOT EXISTS films
(
film_id int generated by default as identity primary key,
name  varchar(50) not null,
description varchar(300),
releaseDate timestamp,
duration long not null,
mpa_id int REFERENCES mpa (mpa_id) ON DELETE CASCADE
);

Create table IF NOT EXISTS film_genre
(
film_id int REFERENCES films (film_id) ON DELETE CASCADE,
genre_id  int REFERENCES genre (genre_id) ON DELETE CASCADE
);

create table IF NOT EXISTS users
(
user_id int generated by default as identity primary key,
email  varchar(50) not null,
login varchar(300) not null,
name varchar(50) not null,
birthday date
);

Create table IF NOT EXISTS friendships
(
user_id int REFERENCES users (user_id) ON DELETE CASCADE,
friend_id int,
confirmation boolean
);

Create table IF NOT EXISTS userWhoLiked
(
film_id int REFERENCES films (film_id) ON DELETE CASCADE,
user_id int REFERENCES users (user_id) ON DELETE CASCADE
);